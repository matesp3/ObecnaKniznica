@page "/edit-book/{id:int}"
@page "/add-new-book"
@using ObecnaKniznicaLogic.DataModels;
@inject IHttpClientFactory _httpClientFactory

<PageTitle>Editovať knihu</PageTitle>
<div class="p-4">
    <button id="btnReturn" type="reset" class="btn mt-3">
        Návrať do katalógu
    </button>
    @if (ErrorMessage is null)
    {
        <EditForm Model="@Book">
            <DataAnnotationsValidator/>
            <div id="bookForm" class="container-fluid py-3 px-5 rounded-3">
                <h3 class="text-center"> @(Book.Id > 0 ? "Editovať knihu" : "Pridať novú knihu") </h3>
                <hr/>
                <div class="form-group row">
                    <label for="bookTitle" class="col-form-label col-sm-2 col-lg-1">Titul</label>
                    <div class="col-sm-10 col-lg-11">
                        <InputText id="bookTitle" class="form-control" @bind-Value="Book.Title"> </InputText>
                        <ValidationMessage For="@(() => Book.Title)" />
                    </div>
                </div>
                <hr>
                <!-- Tu pojde foreach pre authorov-->

                @if (Book.Authors is null)
                {
                    <p><bold class="invalid p-2">Žiadny autori</bold></p>
                }
                else
                {
                    int i = 0;
                    @foreach (Author author in Book.Authors)
                    {
                        <div class="row">
                            <AuthorForm/>
                        </div>
                        i++;
                    }
                }

                <div class="form-group row ms-1 mt-2">
                    <div class="col-3 col-md-2 col-lg-1">
                        <button id="btnAddAnotherAuthor" class="btn btn-primary rounded-3" type="button" @onclick="addAuthorInfo">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                    </div>
                    <div class="col">
                        <label for="btnAddAnotherAuthor" class="col-form-label col-6">Pridať autora</label>
                    </div>
                </div>

                <hr>

                <div class="form-group row">
                    <label for="numberOfAvailable" class="col-form-label col-sm-4 col-lg-3 col-xxl-2">Dostupnosť(ks)</label>
                    <div class="col-sm-8 col-lg-9 col-xxl-10">
                        <InputNumber id="numberOfAvailable" class="form-control" @bind-Value="Book.TotalAmount"> </InputNumber>
                        <ValidationMessage For="@(() => Book.TotalAmount)" />
                    </div>
                </div>

                <div class="form-group row mt-3">
                    <label for="description" class="col-form-label col-sm-2 col-lg-1">Popis</label>
                    <div class="col-sm-10 col-lg-11">
                        <InputTextArea id="description" class="form-control" @bind-Value="@Book.Description" placeholder="Priestor na popis knihy"> </InputTextArea>
                    </div>
                </div>

                <div class="row justify-content-center align-items-center">
                    <button id="btnSubmitBookItem" type="submit" class="btn mt-3">
                        Uložiť @(Book.Id > 0 ? "zmeny" : "")
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <h4>@ErrorMessage</h4>
    }
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    private Book Book { get; set; } = new Book { Authors = new List<Author> { new Author { FirstName = "", LastName = "" } } };

    private string? ErrorMessage { get; set; }

    private HttpClient httpClient;

    protected override async Task OnInitializedAsync()
    {
        httpClient = _httpClientFactory.CreateClient("LibraryResources");
        if (Id is not null) // edit-mode
        {
            try
            {
                Book? foundBook = await httpClient!.GetFromJsonAsync<Book>($"api/book/{Id}");
                if (foundBook is not null)
                {
                    Book = foundBook;
                    ErrorMessage = null;
                }
                else
                {
                    ErrorMessage = $"Neplatná žiadosť. Kniha so zadaným ID({Id}) neexistuje.";
                }
            }
            catch (Exception e)
            {
                ErrorMessage = $"Chyba. Detail: {e.Message}";
            }
        }
        base.OnInitialized();
    }

    private void addAuthorInfo()
    {

    }
}